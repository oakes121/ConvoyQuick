/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package convoy.gui;

import java.awt.Cursor;
import java.awt.FileDialog;
import java.awt.Image;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLDecoder;
import java.nio.file.Files;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.jdesktop.xswingx.PromptSupport;

/**
 *
 * @author Siddharth
 */
public class AddVehiclePopUp extends javax.swing.JFrame {

    /**
     * Creates new form AddVehiclePopUp
     */
    private VehiclePanel newVehiclePanel;
    private VehicleGrid vehicleGridObj;
    private String vehicleName;
    private String numberOfSeats;
    private URL imageUrl;
    private Image img;
    private static Image medicImageIcon = getMedicIcon();
    private static Image driverImageIcon = getDriverIcon();
    private static Image ccImageIcon = getCCIcon();
    private static Image accImageIcon = getACCIcon();
    private Image finalImage;
    private URL url;
    private boolean isCreateMode = true;
    private boolean isEditMode = false;
    private int editVehicleCounter = 0;
    public boolean medic = false;
    public boolean cc = false;
    public boolean acc = false;

    public AddVehiclePopUp() {
        
        initComponents();
        addHintsToFields();
        newVehiclePanel = new VehiclePanel();
        initDocumentListeners();
        if(MainWindow.getCC()){
            ccCheckBox.setVisible(false);
        }else{
          ccCheckBox.setVisible(true);  
        }
        if(MainWindow.getACC()){
            accCheckBox.setVisible(false);
        }else{
          accCheckBox.setVisible(true);  
        }
        
        this.setLocationRelativeTo(null); //centers frame
        this.setTitle("Add a New Vehicle"); //adds title
        this.setIconImage(new ImageIcon(getClass().getResource("/convoy/resources/images/humveeIcon.png")).getImage());
        this.setResizable(false);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);

    }


    /**
     * initDocumentListeners()limits the all text field input to 20 characters
     */
    private void initDocumentListeners() {
        personnel1Field.setDocument(new JTextFieldLimit(20));
        personnel2Field.setDocument(new JTextFieldLimit(20));
        personnel3Field.setDocument(new JTextFieldLimit(20));
        personnel4Field.setDocument(new JTextFieldLimit(20));
        vehicleInfo1Field.setDocument(new JTextFieldLimit(20));
        vehicleInfo2Field.setDocument(new JTextFieldLimit(20));
        vehicleInfo3Field.setDocument(new JTextFieldLimit(20));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        imageLabel = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        personnel1Field = new javax.swing.JTextField();
        personnel2Field = new javax.swing.JTextField();
        personnel3Field = new javax.swing.JTextField();
        personnel4Field = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        vehicleInfo1Field = new javax.swing.JTextField();
        vehicleInfo2Field = new javax.swing.JTextField();
        vehicleInfo3Field = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        addVehicleButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        ccCheckBox = new javax.swing.JCheckBox();
        accCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 0));
        setIconImage(new ImageIcon(getClass().getResource("/convoy/resources/images/humveeIcon.png")).getImage());

        jLayeredPane1.setBackground(new java.awt.Color(194, 178, 128));
        jLayeredPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLayeredPane1.setForeground(new java.awt.Color(194, 178, 128));
        jLayeredPane1.setOpaque(true);
        jLayeredPane1.setPreferredSize(new java.awt.Dimension(1888, 718));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("VEHICLE SELECTION");

        imageLabel.setFont(new java.awt.Font("Lucida Fax", 1, 18)); // NOI18N
        imageLabel.setText("       Click to add Image");
        imageLabel.setCursor(new Cursor(Cursor.HAND_CURSOR));
        imageLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        imageLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                imageLabelMousePressed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("*");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                        .addGap(181, 181, 181))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(92, 92, 92))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("PERSONNEL");

        personnel1Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personnel1FieldActionPerformed(evt);
            }
        });

        personnel3Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personnel3FieldActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Type", "Medic", "Passenger" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Type", "Medic", "Passenger" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("*1");

        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("*2");

        jLabel6.setText(" 3");

        jLabel7.setText(" 4");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Driver");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Type", "Medic", "Passenger" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel11.setForeground(new java.awt.Color(255, 0, 0));
        jLabel11.setText("* Required");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                        .addGap(38, 38, 38)
                        .addComponent(jLabel11)
                        .addGap(157, 157, 157))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 17, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(personnel2Field)
                            .addComponent(personnel1Field, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(personnel4Field)
                            .addComponent(personnel3Field, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(personnel1Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(personnel2Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(personnel3Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(personnel4Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setText("VEHICLE INFORMATION");

        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setText("*");

        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setText("*");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(157, 157, 157))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vehicleInfo2Field)
                            .addComponent(vehicleInfo3Field)
                            .addComponent(vehicleInfo1Field, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(24, 24, 24))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vehicleInfo1Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vehicleInfo2Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(vehicleInfo3Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        addVehicleButton.setText("Add Vehicle");
        addVehicleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVehicleButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        ccCheckBox.setBackground(new java.awt.Color(194, 178, 128));
        ccCheckBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ccCheckBox.setText(" Convoy Commander's Vehicle");
        ccCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ccCheckBoxActionPerformed(evt);
            }
        });

        accCheckBox.setBackground(new java.awt.Color(194, 178, 128));
        accCheckBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        accCheckBox.setText("Assistant Convoy Commander's Vehicle");
        accCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(addVehicleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(28, 28, 28)
                        .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(40, 40, 40))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ccCheckBox)
                            .addComponent(accCheckBox)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(ccCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(accCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addVehicleButton)
                            .addComponent(cancelButton))))
                .addGap(20, 20, 20))
        );
        jLayeredPane1.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jPanel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(addVehicleButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(cancelButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(ccCheckBox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(accCheckBox, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 759, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addHintsToFields() {
        // PromptSupport.setPrompt("Search vehicle", vehicleNameField);
        PromptSupport.setPrompt("Driver Name", personnel1Field);
        PromptSupport.setPrompt("Personnel 2 Name", personnel2Field);
        PromptSupport.setPrompt("Personnel 3 Name", personnel3Field);
        PromptSupport.setPrompt("Personnel 4 Name", personnel4Field);
        PromptSupport.setPrompt("Bumper Number", vehicleInfo1Field);
        PromptSupport.setPrompt("Call Sign", vehicleInfo2Field);
        PromptSupport.setPrompt("Additional Information", vehicleInfo3Field);

    }
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        //dispose();
        //System.exit(0);
        this.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void addVehicleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVehicleButtonActionPerformed
        // TODO add your handling code here:
        //addValuesToVehiclePanel();
        //System.out.println("Adding New Vehicle");        
        // vehicleGridObj.replaceAddNewVehiclePanel(newVehiclePanel);

        if (isCreateMode) {
            if (validateVehicleInfo()) {
                
                if(ccCheckBox.isSelected()){
                    MainWindow.setCC(true);
                }
                if(accCheckBox.isSelected()){
                    MainWindow.setACC(true);
                }

                
                newVehiclePanel.setSelections(jComboBox1.getSelectedIndex(),
                    jComboBox2.getSelectedIndex(), jComboBox3.getSelectedIndex());    
                
                addValuesToVehiclePanel(newVehiclePanel);
                
                vehicleGridObj.replaceAddNewVehiclePanel(newVehiclePanel);
                isCreateMode = false;
                dispose();
                //this.setVisible(false);
                //vehicleGridObj.storeAddVehiclePopUp(this);
            } 
        }

        if (isEditMode) {
            
            addValuesToVehiclePanel(vehicleGridObj.getVehiclePanelArray().get(editVehicleCounter));
            vehicleGridObj.getVehiclePanelArray().get(editVehicleCounter).setSelections(jComboBox1.getSelectedIndex(),
                    jComboBox2.getSelectedIndex(), jComboBox3.getSelectedIndex());
            
            dispose();
        }
    }//GEN-LAST:event_addVehicleButtonActionPerformed

    private boolean validateVehicleInfo() {
        if (url == null) {
            JOptionPane.showMessageDialog(null, "Please add a vehicle image.", "Alert Message", JOptionPane.WARNING_MESSAGE);
            return false;
        } else if ("".equals(personnel1Field.getText())) {
            JOptionPane.showMessageDialog(null, "Please enter the driver's name.", "Alert Message", JOptionPane.WARNING_MESSAGE);
            return false;
        } else if ("".equals(personnel2Field.getText())) {
            JOptionPane.showMessageDialog(null, "Please enter Personnel 2 name.", "Alert Message", JOptionPane.WARNING_MESSAGE);
            return false;
        } else if (jComboBox1.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Please select Personnel 2 type.", "Alert Message", JOptionPane.WARNING_MESSAGE);
            return false;
        } else if ("".equals(vehicleInfo1Field.getText())) {
            JOptionPane.showMessageDialog(null, "Please enter the bumper number.", "Alert Message", JOptionPane.WARNING_MESSAGE);
            return false;
        } else if ("".equals(vehicleInfo2Field.getText())) {
            JOptionPane.showMessageDialog(null, "Please enter the call sign.", "Alert Message", JOptionPane.WARNING_MESSAGE);
            return false;
        }else if (!"".equals(personnel3Field.getText()) && jComboBox2.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Please select Personnel 3 type.", "Alert Message", JOptionPane.WARNING_MESSAGE);
            return false;
        }else if (!"".equals(personnel4Field.getText()) && jComboBox3.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Please select Personnel 4 type.", "Alert Message", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        else if ("".equals(personnel3Field.getText()) && jComboBox2.getSelectedIndex() != 0) {
            JOptionPane.showMessageDialog(null, "Please enter Personnel 3 name.", "Alert Message", JOptionPane.WARNING_MESSAGE);
            jComboBox2.setSelectedIndex(0);
            return false;
        }else if ("".equals(personnel4Field.getText()) && jComboBox3.getSelectedIndex() != 0) {
            JOptionPane.showMessageDialog(null, "Please enter Personnel 4 name.", "Alert Message", JOptionPane.WARNING_MESSAGE);
            jComboBox3.setSelectedIndex(0);
            return false;
        }else {
            /*
            if(jComboBox1.getSelectedIndex() == 1){
                //MainWindow.setCC(true);
            }
            if(jComboBox1.getSelectedIndex() == 2){
                MainWindow.setACC(true);
            }
            if(jComboBox2.getSelectedIndex() == 1){
                MainWindow.setCC(true);
            }
            if(jComboBox2.getSelectedIndex() == 2){
                MainWindow.setACC(true);
            }
            if(jComboBox3.getSelectedIndex() == 1){
                MainWindow.setCC(true);
            }
            if(jComboBox3.getSelectedIndex() == 2){
                MainWindow.setACC(true);
            }
            */
            return true;
        }

    }

    private void personnel1FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personnel1FieldActionPerformed

    }//GEN-LAST:event_personnel1FieldActionPerformed

    private void personnel3FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personnel3FieldActionPerformed
        //personnel3Field.setText(vehicleName);
    }//GEN-LAST:event_personnel3FieldActionPerformed

    public static String getProgramPath() throws UnsupportedEncodingException {
        URL url = convoy.gui.MainMenu.class.getProtectionDomain().getCodeSource().getLocation();
        String jarPath = URLDecoder.decode(url.getFile(), "UTF-8");
        String parentPath = new File(jarPath).getParentFile().getPath();
        return parentPath;
    }

    private static void copyFile(File source, File dest) throws IOException {

        Files.copy(source.toPath(), dest.toPath());

    }

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        /*
        if(jComboBox1.getSelectedIndex() == 1 && MainWindow.getCC()){
            JOptionPane.showMessageDialog(null, "The Convoy Commander has already been assigned.", "Alert Message", JOptionPane.WARNING_MESSAGE);
            jComboBox1.setSelectedIndex(0);
        }
        if(jComboBox1.getSelectedIndex() == 2 && MainWindow.getACC()){
            JOptionPane.showMessageDialog(null, "The Assitant Convoy Commander has already been assigned.", "Alert Message", JOptionPane.WARNING_MESSAGE);
            jComboBox1.setSelectedIndex(0);
        }
        */
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        /*        
        if(jComboBox3.getSelectedIndex() == 1 && MainWindow.getCC()){
            JOptionPane.showMessageDialog(null, "The Convoy Commander has already been assigned.", "Alert Message", JOptionPane.WARNING_MESSAGE);
            jComboBox3.setSelectedIndex(0);
        }
        if(jComboBox3.getSelectedIndex() == 2 && MainWindow.getACC()){
            JOptionPane.showMessageDialog(null, "The Assitant Convoy Commander has already been assigned.", "Alert Message", JOptionPane.WARNING_MESSAGE);
            jComboBox3.setSelectedIndex(0);
        }
        */

    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void imageLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imageLabelMousePressed
        try {

            FileDialog loadFile;
            loadFile = new FileDialog(this, "Choose an Image", FileDialog.LOAD);
            loadFile.setFile("*.jpg;*.jpeg;*.png;*.gif");
            loadFile.setDirectory(getProgramPath() + "\\conx\\images\\vehicles\\");
            loadFile.setVisible(true);
            try {
                File file = new File(loadFile.getFile());
                if (file.exists() || file != null) {
                    url = new URL("file:\\" + loadFile.getDirectory() + file);
                    

                    copyFile(new File(loadFile.getDirectory() + file), new File(getProgramPath() + "\\conx\\images\\vehicles\\" + file));
                    newVehiclePanel.setIconPath(getProgramPath() + "\\conx\\images\\vehicles\\" + file);

                    try {
                        img = ImageIO.read(url);
                        finalImage = img.getScaledInstance(268, 209, java.awt.Image.SCALE_SMOOTH);
                        ImageIcon icon = new ImageIcon(finalImage);
                        imageLabel.setIcon(icon);
                        //jLabel1.setIcon(icon);
                        revalidate();
                        repaint();
                    } catch (IOException ex) {
                        Logger.getLogger(AddVehiclePopUp.class.getName()).log(Level.SEVERE, null, ex);
                    }

                } else {
                }
            } catch (IOException ex) {

            }
        } catch (UnsupportedEncodingException ex) {

        }
    }//GEN-LAST:event_imageLabelMousePressed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        /*
        if(jComboBox2.getSelectedIndex() == 1 && MainWindow.getCC()){
            JOptionPane.showMessageDialog(null, "The Convoy Commander has already been assigned.", "Alert Message", JOptionPane.WARNING_MESSAGE);
            jComboBox2.setSelectedIndex(0);
        }
        if(jComboBox2.getSelectedIndex() == 2 && MainWindow.getACC()){
            JOptionPane.showMessageDialog(null, "The Assitant Convoy Commander has already been assigned.", "Alert Message", JOptionPane.WARNING_MESSAGE);
            jComboBox2.setSelectedIndex(0);
        }
        */
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void accCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accCheckBoxActionPerformed
        if (isEditMode && !isCreateMode)
            newVehiclePanel = vehicleGridObj.getVehiclePanelArray().get(editVehicleCounter);
        
        if(accCheckBox.isSelected()){
            ccCheckBox.setEnabled(false);
            if (!MainWindow.getACC()){
                newVehiclePanel.setCCIORACCIcon(accImageIcon);
                newVehiclePanel.setIsACC(true);
                MainWindow.setACC(true);
            }else
                JOptionPane.showMessageDialog(null, "The Assistant Convoy Commander has already been assigned", "Alert Message", JOptionPane.WARNING_MESSAGE);
        }else { 
            if ((accCheckBox.isSelected() || newVehiclePanel.getIsCC()) && isEditMode) {
                newVehiclePanel.removeCCORACCIcon();
                newVehiclePanel.setIsACC(false);
                MainWindow.setACC(false);
            }
            
           ccCheckBox.setEnabled(true); 
        }
    }//GEN-LAST:event_accCheckBoxActionPerformed

    private void ccCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ccCheckBoxActionPerformed
        if (isEditMode && !isCreateMode)
            newVehiclePanel = vehicleGridObj.getVehiclePanelArray().get(editVehicleCounter);
        
        if(ccCheckBox.isSelected()){
            accCheckBox.setEnabled(false);
             //JOptionPane.showMessageDialog(this, MainWindow.getCC() ? "isCC1" : "isn'tCC1");
            if (!MainWindow.getCC()){
                newVehiclePanel.setCCIORACCIcon(ccImageIcon);
                newVehiclePanel.setIsCC(true);
                MainWindow.setCC(true);
            }else
                JOptionPane.showMessageDialog(null, "The Convoy Commander has already been assigned", "Alert Message", JOptionPane.WARNING_MESSAGE);
        }else{
            if ((ccCheckBox.isSelected() || newVehiclePanel.getIsCC()) && isEditMode) {
                newVehiclePanel.removeCCORACCIcon();
                newVehiclePanel.setIsCC(false);
                MainWindow.setCC(false);
                //JOptionPane.showMessageDialog(this, MainWindow.getCC() ? "isCC2" : "isn'tCC2");
            }
           accCheckBox.setEnabled(true); 
        }
    }//GEN-LAST:event_ccCheckBoxActionPerformed

    public void setEditVehicleCounter(int counter) {
        editVehicleCounter = counter;
    }

    public void setObject(VehicleGrid vehicleGrid) {
        vehicleGridObj = vehicleGrid;
    }

    public void setVehicleName(String name) {
        vehicleName = name;
    }

    public void setNumberOfSeats(String seats) {
        numberOfSeats = seats;
    }

    public void setImageUrl(URL imgUrl) {
        imageUrl = imgUrl;
    }

    private void addValuesToVehiclePanel(VehiclePanel vp) {

        vp.setDriverName(personnel1Field.getText());
        vp.setPassenger1(personnel2Field.getText());
        vp.setPassenger2(personnel3Field.getText());
        vp.setPassenger3(personnel4Field.getText());
        vp.setBumperNumber(vehicleInfo1Field.getText());
        vp.setCallSign(vehicleInfo2Field.getText());
        vp.setAdditionalInfo(vehicleInfo3Field.getText());
        vp.setImage(img);
        vp.setDriverIcon(driverImageIcon);

        //These conditional statements set the CC label to the passenger
        if (jComboBox1.getSelectedIndex() == 2) {
            //vp.setCCIcon(ccImageIcon, 1);
        }

        if (jComboBox2.getSelectedIndex() == 2) {
            //vp.setCCIcon(ccImageIcon, 2);
        }
        if (jComboBox3.getSelectedIndex() == 2) {
            //vp.setCCIcon(ccImageIcon, 3);
        }
        /*
         //These Conditional statements remove the CC icons
         if (jComboBox1.getSelectedIndex() != 1){
         vp.setPassenger1LayoutToBlack();
         vp.removeCCIcon(1);
         }
         if (jComboBox2.getSelectedIndex() != 1){
         vp.setPassenger1LayoutToBlack();
         vp.removeCCIcon(2);
         }
         if (jComboBox3.getSelectedIndex() != 1){
         vp.setPassenger1LayoutToBlack();
         vp.removeCCIcon(3);
         }
         //End of CC conditiional Statments
         */

        // These conditional statements are used if any of the combo box selects medic as their passenger type
        if (jComboBox1.getSelectedIndex() == 1) {
            vp.setPassenger1Layout();
            vp.setMedicIcon(medicImageIcon, 1);
        }
        if (jComboBox2.getSelectedIndex() == 1) {
            vp.setPassenger2Layout();
            vp.setMedicIcon(medicImageIcon, 2);
        }
        if (jComboBox3.getSelectedIndex() == 1) {
            vp.setPassenger3Layout();
            vp.setMedicIcon(medicImageIcon, 3);
        }

        if (jComboBox1.getSelectedIndex() == 4) {
            vp.setPassenger1LayoutToBlack();
            vp.removeIconImage(1);
        }
        if (jComboBox2.getSelectedIndex() == 4) {
            vp.setPassenger2LayoutToBlack();
            vp.removeIconImage(2);
        }
        if (jComboBox3.getSelectedIndex() == 4) {
            vp.setPassenger3LayoutToBlack();
            vp.removeIconImage(3);
        }

        /*
         if (jComboBox2.getSelectedIndex() == 0){
         //vp.setPassenger2LayoutToBlack();
         //vp.removeIconImage(2);
         JOptionPane.showMessageDialog(null, "Please select the passenger type", "Alert Message", JOptionPane.WARNING_MESSAGE);
         this.setVisible(true);
         }
         if (jComboBox3.getSelectedIndex() == 0){
         //vp.setPassenger3LayoutToBlack();
         //vp.removeIconImage(3);
         JOptionPane.showMessageDialog(null, "Please select the passenger type", "Alert Message", JOptionPane.WARNING_MESSAGE);  
         this.setVisible(true);
         }
         
         */
         // Begin Test 041120141659
         /*
         if (!jComboBox1.getSelectedItem().toString().contains("Medic")){
         vp.setPassenger1LayoutToBlack();
         vp.removeMedicIcon(1);
         }
         if (!jComboBox2.getSelectedItem().toString().contains("Medic")){
         vp.setPassenger1LayoutToBlack();
         vp.removeMedicIcon(1);
         }
         if (!jComboBox3.getSelectedItem().toString().contains("Medic")){
         vp.setPassenger1LayoutToBlack();
         vp.removeMedicIcon(1);
         }
         */
         // End Test
        /*
         // These conditional statemens are used to remove medic icons
         if (jComboBox1.getSelectedIndex() != 3){
         vp.setPassenger1LayoutToBlack();
         vp.removeMedicIcon(1);
         }
         if (jComboBox2.getSelectedIndex() != 3){
         vp.setPassenger2LayoutToBlack();
         vp.removeMedicIcon(2);
         }
         if (jComboBox3.getSelectedIndex() != 3){
         vp.setPassenger3LayoutToBlack();
         vp.removeMedicIcon(3);
         }
         // End of medic conditional statements
         
         */
        // These Conditional statements are used to add ACC icon
        if (jComboBox1.getSelectedIndex() == 2) {
            //vp.setACCIcon(accImageIcon, 1);
        }
        if (jComboBox2.getSelectedIndex() == 2) {
            //vp.setACCIcon(accImageIcon, 2);
        }
        if (jComboBox3.getSelectedIndex() == 2) {
            //vp.setACCIcon(accImageIcon, 3);
        }

    }

    // This method gets the driver Icon from the resources folder
    public static void setDriverIcon() {

        try {
            //URL url = getClass().getResource("./convoy/resources/icons/steeringWheel.png");
            Image iconImage = ImageIO.read(new File(getProgramPath() + "\\conx\\images\\icons\\steeringWheel.png"));
            driverImageIcon = iconImage.getScaledInstance(17, 17, java.awt.Image.SCALE_SMOOTH);

        } catch (IOException ex) {
            Logger.getLogger(AddVehiclePopUp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    //This method gets the medic icon from the resources folder 
    public static void setMedicIcon() {
        try {
            //URL url = getClass().getClassLoader().getResource("./conx/images/icons/medic.png");
            Image iconImage = ImageIO.read(new File(getProgramPath() + "\\conx\\images\\icons\\medic.png"));
            //System.out.print(iconImage);
            medicImageIcon = iconImage.getScaledInstance(20, 20, java.awt.Image.SCALE_SMOOTH);

        } catch (IOException ex) {
            Logger.getLogger(AddVehiclePopUp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    //This method gets the Convoy Commander icon from the resources folder 
    public static void setCCIcon() {
        try {
            //URL url = getClass().getClassLoader().getResource("./conx/images/icons/cc.png");
            Image iconImage = ImageIO.read(new File(getProgramPath() + "\\conx\\images\\icons\\ccIcon.png"));
            // Image iconImage = ImageIO.read(url);
            ccImageIcon = iconImage.getScaledInstance(50, 50, java.awt.Image.SCALE_SMOOTH);

        } catch (IOException ex) {
            Logger.getLogger(AddVehiclePopUp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    //This method gets the Convoy Commander icon from the resources folder 
    public static void setACCIcon() {
        try {
            //URL url = getClass().getClassLoader().getResource("./conx/images/icons/acc.png");
            Image iconImage = ImageIO.read(new File(getProgramPath() + "\\conx\\images\\icons\\accIcon.png"));
            //Image iconImage = ImageIO.read(url);
            accImageIcon = iconImage.getScaledInstance(50, 50, java.awt.Image.SCALE_SMOOTH);

        } catch (IOException ex) {
            Logger.getLogger(AddVehiclePopUp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
        public static Image getMedicIcon() {
        if (medicImageIcon == null) {
            setMedicIcon();
            
        }
        return medicImageIcon;
    }
    
    public static Image getDriverIcon() {
        if (driverImageIcon == null )
            setDriverIcon();
        
        return driverImageIcon;
    }
    
    public static Image getCCIcon() {
        if (ccImageIcon == null) 
            setCCIcon();
        
        return ccImageIcon;
    }
    
    public static Image getACCIcon() {
        if (accImageIcon == null)
            setACCIcon();
        
        return accImageIcon;
    } 
    
    public void getInfoFromVehiclePanel(VehiclePanel vp) {
        if (vp.getIsCC()) {
            ccCheckBox.setVisible(true);
            ccCheckBox.setSelected(true);
        }
        
        
        if (vp.getIsACC()){
            accCheckBox.setVisible(true);
            accCheckBox.setSelected(true);
        }
        
        
        personnel1Field.setText(vp.getDriverName());
        personnel2Field.setText(vp.getPassenger1());
        personnel3Field.setText(vp.getPassenger2());
        personnel4Field.setText(vp.getPassenger3());
        vehicleInfo1Field.setText(vp.getBumperNumber());
        vehicleInfo2Field.setText(vp.getCallSign());
        vehicleInfo3Field.setText(vp.getAdditonalInfo());
        
        URL theUrl;
        try {
            theUrl = new URL("file:\\" + vp.getIconPath());
            
            //System.out.print(theUrl);
            
            try {
                img = ImageIO.read(theUrl);
                finalImage = img.getScaledInstance(268, 209, java.awt.Image.SCALE_SMOOTH);
                ImageIcon icon = new ImageIcon(finalImage);
                imageLabel.setIcon(icon);       
                addVehicleButton.setText("Apply Changes");
                revalidate();
                repaint();
            } catch (IOException ex) {
                Logger.getLogger(AddVehiclePopUp.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        } catch (MalformedURLException ex) {
            Logger.getLogger(AddVehiclePopUp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void validationAfterSet(int selec) {
        if (selec == 1)
            MainWindow.setCC(true);
        
        if (selec == 2)
            MainWindow.setACC(true);
    }
    
    public void setSelection1(int selec) {
        jComboBox1.setSelectedIndex(selec);
        //validationAfterSet(selec);        
    }
    
    public void setSelection2(int selec) {
        jComboBox2.setSelectedIndex(selec);
        //validationAfterSet(selec);           
    }
    
    public void setSelection3(int selec) {
        jComboBox3.setSelectedIndex(selec);
        //validationAfterSet(selec);        
    }
    
    public void addVehicleButtonDoClick() {
        addVehicleButton.doClick();
    }    
    
    public int getSelection1() {
        return jComboBox1.getSelectedIndex();
    }
    
    public int getSelection2() {
        return jComboBox2.getSelectedIndex();
    }
    
    public int getSelection3() {
        return jComboBox3.getSelectedIndex();
    }
    
    public void setCreateMode(boolean truth) {
        isCreateMode = truth;
    }
    
    public void setEditMode(boolean truth) {
        isEditMode = truth;
    } 

    public void modifyPopUp() {

        //vehicleNameField.setText(vehicleName);
        //setImage();
        switch (numberOfSeats) {

            case "1":
                setAllFieldsVisible();
                personnel2Field.setVisible(false);
                personnel2Field.setText("");
                personnel3Field.setVisible(false);
                personnel3Field.setText("");
                personnel4Field.setVisible(false);
                personnel4Field.setText("");
                jComboBox1.setVisible(false);
                jComboBox2.setVisible(false);
                jComboBox3.setVisible(false);
                jLabel5.setVisible(false);
                jLabel6.setVisible(false);
                jLabel7.setVisible(false);
                break;

            case "2":
                setAllFieldsVisible();
                personnel3Field.setVisible(false);
                personnel3Field.setText("");
                personnel4Field.setVisible(false);
                personnel4Field.setText("");
                jComboBox2.setVisible(false);
                jComboBox3.setVisible(false);
                jLabel6.setVisible(false);
                jLabel7.setVisible(false);
                break;

            case "3":
                setAllFieldsVisible();
                personnel4Field.setVisible(false);
                personnel4Field.setText("");
                jComboBox3.setVisible(false);
                jLabel7.setVisible(false);
                break;

            case "4":
                setAllFieldsVisible();
                break;

            case "5":
                setAllFieldsVisible();
                //Keep a roster
                personnel1Field.setVisible(false);
                personnel1Field.setText("");
                personnel2Field.setVisible(false);
                personnel2Field.setText("");
                personnel3Field.setVisible(false);
                personnel3Field.setText("");
                personnel4Field.setVisible(false);
                personnel4Field.setText("");
                jComboBox1.setVisible(false);
                jComboBox2.setVisible(false);
                jComboBox3.setVisible(false);
                jLabel4.setVisible(false);
                jLabel5.setVisible(false);
                jLabel6.setVisible(false);
                jLabel7.setVisible(false);
                jLabel8.setVisible(false);
                break;
            default:
                //trailer or some unmanned vehicle
                jPanel2.hide();
                break;
        }

    }

    public void setAllFieldsVisible() {
        jPanel2.setVisible(true);
        personnel1Field.setVisible(true);
        personnel2Field.setVisible(true);
        personnel3Field.setVisible(true);
        personnel4Field.setVisible(true);
        jComboBox1.setVisible(true);
        jComboBox2.setVisible(true);
        jComboBox3.setVisible(true);
        jLabel4.setVisible(true);
        jLabel5.setVisible(true);
        jLabel6.setVisible(true);
        jLabel7.setVisible(true);
        jLabel8.setVisible(true);
    }
    /*
     public void setImage() {

     try {

     img = ImageIO.read(imageUrl);
     img = img.getScaledInstance(268, 209, java.awt.Image.SCALE_SMOOTH);

     ImageIcon icon = new ImageIcon(img);
     imageLabel.setIcon(icon);

     revalidate();
     repaint();
     } catch (Exception ex) {
     Logger.getLogger(AddVehiclePopUp.class.getName()).log(Level.SEVERE, null, ex);
     System.out.print("Image Error");
     }
     }
     */

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddVehiclePopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new AddVehiclePopUp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JCheckBox accCheckBox;
    private javax.swing.JButton addVehicleButton;
    private javax.swing.JButton cancelButton;
    protected javax.swing.JCheckBox ccCheckBox;
    private javax.swing.JLabel imageLabel;
    protected javax.swing.JComboBox jComboBox1;
    protected javax.swing.JComboBox jComboBox2;
    protected javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField personnel1Field;
    private javax.swing.JTextField personnel2Field;
    private javax.swing.JTextField personnel3Field;
    private javax.swing.JTextField personnel4Field;
    private javax.swing.JTextField vehicleInfo1Field;
    private javax.swing.JTextField vehicleInfo2Field;
    private javax.swing.JTextField vehicleInfo3Field;
    // End of variables declaration//GEN-END:variables
}
